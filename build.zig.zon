.{
    .name = "Z-body",
    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.2.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    .minimum_zig_version = "0.12.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        .@"raylib-zig" = .{
            // TODO: Fix to specific commit.
            // Now if there is update on devel branch, our hash becoming invalid
            .url = "https://github.com/Not-Nik/raylib-zig/archive/devel.tar.gz",
            // .hash = "1220361ce363a465c3f52e7e35ca5f1d9c2f5ed8a9207b79c2edb4396cdf31009c48",
            .hash = "12202b55e516247ae27b38919685b8da1543467cfd15cd92d4d4a840dc236d9dc754",
        },
        .@"zb-core" = .{
            .path = "./zb-core",
        },
    },
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        "deps.nix",
        // For example...
        //"LICENSE",
        //"README.md",
    },
}
